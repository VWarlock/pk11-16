┌──────────────────────────────────────────────────────────────────────────┐
│			Структура Процесса				   │
└──────────────────────────────────────────────────────────────────────────┘

    Процесс разбит на две части: процессные"ресурсы" и "код". Все почти как
у программы, но так как процесс не имеет интерфейса с пользователем, то
"ресурсы" имеют всего пять блоков: блок параметров процесса, блок процессных
атрибутов, блок файловых атрибутов, блок описания подпрограмм и блок
описания переменных. Каждый блок имеет строго определенную структуру и сам
находится в строго определенной структуре.

┌──────────────────────────────────────────────────────────────────────────┐
│			Описание "ресурсов" процесса			   │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│			Блок параметров процесса			   │
└──────────────────────────────────────────────────────────────────────────┘
        
Назначение__________________________________________________________________

    Блок параметров процесса служит для описания адресов основных блоков, по
которым система производит действия с процессом.
         
Структура___________________________________________________________________

┌────────┬──────┬─────────────┬───┬────────────────────────────────────────┐
│  Адрес │ Тип	│  Параметр   │См.│	        Комментарий		   │
├────────┴──────┴─────────────┴───┴────────────────────────────────────────┤
│ Edit_String								   │
├──────────────────────────────────────────────────────────────────────────┤
│	word	AdFilAtr	0	Адрес блока файловых атрибутов     │
│	word	AdPrcAtr	2	Адрес блока процессных атрибутов   │
│	word	AdVarDes	4	Адрес блока описания переменных	   │
└──────────────────────────────────────────────────────────────────────────┘
         
Описание переменных и констант______________________________________________

 Адреса
┌───────────────┬──────────────────────────────────────────────────────────┐
│ Имя параметра │		    Примечание				   │
├───────────────┴──────────────────────────────────────────────────────────┤
│ AdFilAtr	 Адреса блоков описаний должны находиться в 		   │
│ AdPrcAtr	 непереотображаемых 64К  ОЗУ				   │
│ AdVarDes								   │
└──────────────────────────────────────────────────────────────────────────┘
         
Описание применения_________________________________________________________

    Этот блок является неотъемлемой частью процесса, и он обязателен.
         
Рекомендации по использованию_______________________________________________

    Блок параметров процесса может находиться в любом месте программы, но
обязательно должен находиться в непереотображаемом адресном пространстве ОЗУ
процесса. Это связано с тем, что система по этому блоку "восстанавливает"
всю структуру процесса при его запуске и выгрузке.
         
Примеры использования_______________________________________________________

    Примеров нет, так как этот модуль присутствует в каждом процессе, он
стандартен и имеет фиксированный набор обязательных элементов. 
     
Примеры описания____________________________________________________________

StrtPrc:
	.word	AdFilAtr
	.word	AdPrcAtr
	.word	AdVarDes

┌──────────────────────────────────────────────────────────────────────────┐
│			Блок описания процессных атрибутов		   │
└──────────────────────────────────────────────────────────────────────────┘
        
Назначение__________________________________________________________________

    Блок предназначен для описания связей между процессами, а также
собственных системных атрибутов.
         
Структура___________________________________________________________________

┌────────┬──────┬─────────────┬───┬────────────────────────────────────────┐
│  Адрес │ Тип	│  Параметр   │См.│	        Комментарий		   │
├────────┴──────┴─────────────┴───┴────────────────────────────────────────┤
│ AdPrcAtr								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  byte	 Priority	0	Приоритет процесса		   │
│	  word	 AdTbPrc	2	Адрес таблицы описаний атрибутов   │
│					процесса			   │
│	  word	 AdSlfReg	4	Адрес таблицы описания собственных │
│					регистров			   │
│	  word	 Descript	6	Адрес дескриптора процесса	   │
├──────────────────────────────────────────────────────────────────────────┤
│ AdTbPrc								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  word	 Prc1		0    Адрес описания атрибутов используемого│
│				     процесса 1				   │
│	  ...	 ...		..   ...				   │
│	  word	 PrcN		n    Адрес описания атрибутов используемого│
│				     процесса N				   │
│	  word	 Nul		n+1  Конец описания			   │
├──────────────────────────────────────────────────────────────────────────┤
│ Prc1									   │
├──────────────────────────────────────────────────────────────────────────┤
│	 ascii	 NamPrc1	0     Идентификатор используемогопроцесса  │
│	  word	 Reg11		10    Адрес регистра 11			   │
│	  ...	 ...		..    ...				   │
│	  word	 Reg1N		n     Адрес регистра 1N			   │
│ 	  word	 -Nul		n+1   Конец описания			   │
├──────────────────────────────────────────────────────────────────────────┤
│ PrcN									   │
├──────────────────────────────────────────────────────────────────────────┤
│	 ascii	 NamPrcN	0     Идентификатор используемого процесса │
│	  word	 RegN1		4     Адрес регистра N1			   │
│	  ...	 ...		..    ...				   │
│	  word	 RegNN		n     Адрес регистра NN			   │
│	  word	 -Nul		n+1   Конец описания			   │
├──────────────────────────────────────────────────────────────────────────┤
│ AdSlfReg								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  word	 SlfReg1	0   Адрес описания собственного регистра N1│
│	  ...	 ...	..	...					   │
│	  word	 SlfRegN	n   Адрес описания собственного регистра NN│
│	  word	 Nul		n+1  Конец описания			   │
├──────────────────────────────────────────────────────────────────────────┤
│ SlfReg1								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  word	 Tech		0    Техническое слово			   │
│	  word	 Mask		2    Маска разрядов по чтению		   │
│	  word	 Copy		4    Копия разрядов по чтению		   │
│	  word	 Stat		6    Правила обработки			   │
│	  word	 AdrHLT		10   Адрес подпрограммы в HALT		   │
│	  word	 Strt		12   Пользовательский параметр		   │
│	  word	 Reset		14   Слово для копирования по INIT	   │
├──────────────────────────────────────────────────────────────────────────┤
│ SlfRegN								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  word	 Tech		0    Техническое слово			   │
│	  word	 Mask		2    Маска разрядов по чтению		   │
│	  word	 Copy		4    Копия разрядов по чтению		   │
│	  word	 Stat		6    Правила обработки			   │
│	  word	 AdrHLT		10   Адрес подпрограммы в HALT		   │
│	  word	 Strt		12   Пользовательский параметр		   │
│	  word	 Reset		14   Слово для копирования по INIT	   │
└──────────────────────────────────────────────────────────────────────────┘
				
Описание переменных и констант______________________________________________

 Константы
┌─────────────┬───────────┬──────────┬─────────────────────────────────────┐
│Имя параметра│Мнем. знач.│Абс. знач.│		   Примечание		   │
├─────────────┴───────────┴──────────┴─────────────────────────────────────┤
│		Nul		0	Конец описания			   │
│		-Nul		-1	Конец описания			   │
└──────────────────────────────────────────────────────────────────────────┘

 Переменные
┌─────────────┬────────────┬──────────┬────────────────────────────────────┐
│Имя параметра│	Изм. знач. │Доп. инф. │		    Примечание		   │
├─────────────┴────────────┴──────────┴────────────────────────────────────┤
│NamPrc1..N	0...255	      коды	Строка символов для отображения    │
│			    символов	идентификатора используемого 	   │
│			     4 байта	процесса.			   │
└──────────────────────────────────────────────────────────────────────────┘

 Адреса
┌───────────────┬──────────────────────────────────────────────────────────┐
│ Имя параметра │		    Примечание				   │
├───────────────┴──────────────────────────────────────────────────────────┤
│ AdTbPrc	 Адреса должны быть в отображенных 64 К ОЗУ 		   │
│ Prc1									   │
│ ...									   │
│ PrcN									   │
│ SlfReg1	 Адрес описания регистра #1, принадлежащий  процессу, после│
│		 загрузки ячейка содержит адрес выделенного регистра.	   │
│ ...		 ...							   │
│ SlfRegN	 Адрес описания регистра #N, принадлежащий процессу, после │
│		 загрузки ячейка содержит адрес выделенного регистра.	   │
└──────────────────────────────────────────────────────────────────────────┘

 Технические переменные
┌───────────────┬──────────────────────────────────────────────────────────┐
│ Имя параметра │		    Примечание				   │
├───────────────┴──────────────────────────────────────────────────────────┤
│ Descript	 Дескриптор процесса					   │
│ Reg1		 Регистр # 1 используемого процесса			   │
│ ...									   │
│ RegN		 Регистр # N используемого процесса			   │
└──────────────────────────────────────────────────────────────────────────┘
         
Описание применения_________________________________________________________

    Блок применяется для получения информации о процессах, с которыми будет
работать данный процесс. При загрузке процесса в блок будут занесены адреса
регистров процессов, которые были перечислены, а также адреса собственных
регистров и системные атрибуты. Блок процессных атрибутов содержит в себе
описание приоритета, на котором будет работать процесс. Дескриптор процесса
заполняется системой в процессе загрузки, он используется для системных
целей и для управления ходом выполнения процесса. Для того, чтобы процесс
мог использовать функции других процессов, он должен знать по каким адресам
регистров находятся процессы. Поэтому в блоке процессных атрибутов
описываются модули "заказа" регистров тех процессов, которые нужны данному
процессу. В этом модуле описываются какие процессы и сколько регистров нужно
данному процессу от других процессов.
    Многозадачный монитор, при загрузке процесса, проверяет наличие
требуемых ему процессов по их идентификаторам и заносит адреса регистров
данных процессов в блок "заказа" регистров. По этим регистрам процесс
общается с "заказанными" процессами.
     Блок процессных атрибутов имеет также модуль "заказа" собственных
регистров. Процесс "заказывает" столько регистров, сколько ему требуется для
работы. При загрузке процесса ему будет выделены адреса регистров. Каждый
раз, при загрузке процесса, значения адресов регистров меняются, поэтому
предусмотрен идентификатор процесса, который задается разработчиком
процесса, и по нему происходит "заказ" регистров из программ и процессов.
         
Рекомендации по использованию_______________________________________________

    В блоке при описании приоритета процесса рекомендуется указывать
значения в соответствии с значимостью и весомостью процесса. Если процессу
будет установлен очень большой приоритет, то может возникнуть ситуация,
когда процесс будет использовать значительное время процессора и, тем самым
тормозить работу всей системы.
         
Примеры использования_______________________________________________________

    При помощи описания блока процессных атрибутов можно "заказать" регистры
для создания драйвера печати, через которые программы будут передавать ему
данные.

Примеры описания____________________________________________________________

AdPrcAtr:
	byte	5002.		;Приоритет процесса
	word	AdTbPrc		;Адрес таблицы описаний
				;атрибутов процессов
	word	AdSlfReg	;Адрес описания регистров
	word	0		;Адрес дескриптора процесса
AdTbPrc:
	word	Prc1		;Адрес описания атрибутов
				;используемого процесса
	word	0		;Конец описания
Prc1:
	ascii	/PRNT/		;Идентификатор процесса
	word	0		;Адрес регистра 1
	word	0		;Адрес регистра 2
	word	-1		;Конец описания
AdSlfReg:
	word	SlfReg		;Адрес собственного регистра
	word	0		;Конец описания
SlfReg:
	.word	0		;Техническое слово
	.word	152		;Маска разрядов по чтению
	.word	152		;Копия разрядов
	.word	4000		;Правила обработки
	.word	0		;Адрес подпрограммы в HALT
	.word	AdSubr		;Пользовательский параметр
	.word	-1		;Слово для копирования по INIT
				
┌──────────────────────────────────────────────────────────────────────────┐
│		Блок описания файловых атрибутов			   │
└──────────────────────────────────────────────────────────────────────────┘
         
Назначение__________________________________________________________________

    Блок предназначен для описания параметров процесса, которые используются
для осуществления хранения его на носителе информации, определения
принадлежности к определенному типу программ, принадлежности к
программе-создателю, а также необходимой информации для работы системы.
         
Структура___________________________________________________________________


┌────────┬──────┬─────────────┬───┬────────────────────────────────────────┐
│  Адрес │ Тип	│  Параметр   │См.│	        Комментарий		   │
├────────┴──────┴─────────────┴───┴────────────────────────────────────────┤
│ AdFilAtr								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  word	 AdBpfPrg	0   Адрес описания блока параметров файла  │
├──────────────────────────────────────────────────────────────────────────┤
│ AdBpfPrg								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  word	 Flag		0   Флаг состояния программы		   │
│	 ascii	 NamPrc		2   Имя процесса			   │
│	 ascii	 ExtPrg		22  Расширение				   │
│	  word	 FTech		26  Техническое слово			   │
│	  blkw	 PrgLen		30  Длина программы 			   │
│	  blkw	 Date&Time	34  Дата и время создания		   │
│	  word	 IknposX	40  Координата X иконки			   │
│	  word	 IknposY	42  Координата Y иконки			   │
│	  blkb	 Ikon		144 Иконка программы			   │
│	  word	 TypePrg	264 Тип программы			   │
│	  word	 StrtPrg	266 Адрес блока параметров программы	   │
│	  word	 CheckSum	270 Контрольная сумма			   │
│	  word	 AdStSub	272 Адрес запуска			   │
│	 ascii	 Creator	274 Создатель программы			   │
│	  blkw	 <5.>		300 Технический блок			   │
│	  word	 Version	312 Версия программы			   │
│	  word	 AdOverley	314 Адрес описания оверлейных сегментов	   │
│	  blkw	 <4.>		316 Технический блок			   │
│	 ascii	 Remark		326 Комментарий к программе		   │
└──────────────────────────────────────────────────────────────────────────┘
				
Описание переменных и констант______________________________________________

 Константы
┌─────────────┬───────────┬──────────┬─────────────────────────────────────┐
│Имя параметра│Мнем. знач.│Абс. знач.│		   Примечание		   │
├─────────────┴───────────┴──────────┴─────────────────────────────────────┤
│ Flag		Write	   000000	Файл обыкновенный		   │
│		ReOnly	   000001	Файл только по чтению		   │
│		DntMove	   020000	Файл недвижимый			   │
│		Hidden	   040000	Файл невидимый			   │
│ TypPrg	Process		0	Процесс				   │
│		Program		1	Программа			   │
│		Document	2	Документ			   │
│		Font		3	Шрифт				   │
│		SysPrg		4	Системная программа		   │
│ 		-Nul		-1	Конец описания			   │
└──────────────────────────────────────────────────────────────────────────┘

 Переменные
┌─────────────┬────────────┬──────────┬────────────────────────────────────┐
│Имя параметра│	Изм. знач. │Доп. инф. │		    Примечание		   │
├─────────────┴────────────┴──────────┴────────────────────────────────────┤
│ NamPrg	0..255		коды	Авторское имя программы		   │
│			      символов					   │
│ ExtPrg				Идентификатор  принадлежности	   │
│					программы к программе-создателю	   │
│ Date&Time		       формат	Дата и время создания программы. 32│
│					разрядное слово			   │
│					В секундах от 1 января 1900 г.	   │
│ IknposX	0..100	     в точках	Координаты расположения файла на   │
│ IknposY				панели файлового монитора	   │
│ 					Координаты в младших 14 битах.	   │
│ Ikon			    в режиме 2	Описание иконки программы в матрице│
│			  бита на точку	24Х24 точки.			   │
│ Version		     формат	Версия программы.		   │
│					32 разряд-ное слово:		   │
│					4 бита - незначительные изменения -│
│						 0...64			   │
│					4 бита - существенные изменения -  │
│						 0...64			   │
│					4 бита - глобальные изменения -    │
│						 0...16			   │
│ Creator	0...255		коды	Идентификатор программы -создателя │
│			     символов	4 байта .			   │
│ Remark				Комментарий разработчика программы │
│					78 байт				   │
└──────────────────────────────────────────────────────────────────────────┘

 Адреса
┌───────────────┬──────────────────────────────────────────────────────────┐
│ Имя параметра │		    Примечание				   │
├───────────────┴──────────────────────────────────────────────────────────┤
│ AdBpfPrg	 Адрес описания блока параметров файла			   │
│ StrtPrg	 Адрес описания блока параметров программы		   │
│ AdStSub	 Адрес запуска программы после ее загрузки		   │
│ AdOverley	 Для данной версии системы аргумент должен быть равен 0	   │
└──────────────────────────────────────────────────────────────────────────┘

 Технические переменные
┌───────────────┬──────────────────────────────────────────────────────────┐
│ Имя параметра │		    Примечание				   │
├───────────────┴──────────────────────────────────────────────────────────┤
│ FilLen	 Аргументы заполняются и используются системой		   │
│ CheckSum								   │
└──────────────────────────────────────────────────────────────────────────┘
         
Описание применения_________________________________________________________

    По этому блоку осуществляются все операции с файлом, по сути дела, этот
блок является паспортом процесса. Блок файловых атрибутов программы никогда
не изменяется системой, и поэтому по нему можно восстановить первоначальный
вид процесса. При создании процесса, на устройстве заполняется блок
параметров файла, по значениям, которые были определены программистом в
блоке файловых атрибутов. По этому блоку файловая система загружает процесс
в память.
         
Рекомендации по использованию_______________________________________________

    Из этого блока программист может всегда получить достоверную информацию
о процессе.
         
Примеры использования_______________________________________________________

    Структура блока совпадает со структурой записи на диске, поэтому его
можно использовать его в качестве заранее подготовленного буфера.
         
Примеры описания____________________________________________________________

AdFilAtr:
	.word	AdBpfPrg	;Адрес описания блока параметров файла
AdBpfPrg:
	.word	Write		;Флаг состояния программы
	.ascii	/Мышь  /	;Имя программы
	.ascii	/SMOU/		;Идентификатор программы
	.word	FTech		;Техническое слово
	.blkw	2		;Длина программы 
	.blkw	125,152364	;Дата и время создания
	.word	10.		;Координата X иконки
	.word	50.		;Координата Y иконки
	.blkb	144.		;Иконка программы
	.word	Process		;Тип программы
	.word	StrtPrc		;Адрес блока параметров программы
	.word	0		;Контрольная сумма
	.word	AdStSub		;Адрес запуска
	.ascii	/SASP/		;Идентификатор программы-создателя
	.blkw	5.		;Технический блок
	.word	1		;Версия программы
	.word	0		;Адрес описания оверлейных сегментов
	.blkw	4.		;Технический блок
	.blkb	78.		;Комментарий к процессу

┌──────────────────────────────────────────────────────────────────────────┐
│			    Блок описания подпрограмм			   │
└──────────────────────────────────────────────────────────────────────────┘

Назначение__________________________________________________________________

    Блок описания подпрограмм служит для описания программного кода.
         
Структура___________________________________________________________________

    Структура блока произвольная.
         
Описание переменных и констант______________________________________________

    Описание переменных и констант рекомендуется описывать в блоке 
описания переменных.
         
Описание применения_________________________________________________________

    Применяется для написания алгоритмов расчетов и функций.
         
Рекомендации по использованию_______________________________________________

    Идеология процесса состоит в том, что процесс выполняет, в основном
функции с устройствами или организует общие процедуры для программ, поэтому
при написании программного кода следует учитывать тот факт, что процессом
могут пользоваться несколько программ. Для этого в программном коде должны
быть предусмотрены функции управления программами.
         
Примеры использования_______________________________________________________

    Примеров нет, так как этот модуль произволен по написанию.

Примеры описания____________________________________________________________

AdStSub:
	mov		#10.,r0
	cmp		r1,r4
	beq		1$
	...

┌──────────────────────────────────────────────────────────────────────────┐
│			    Блок описания переменных			   │
└──────────────────────────────────────────────────────────────────────────┘

Назначение__________________________________________________________________

    Блок предназначен для описания переменных используемых в процессе.
         
Структура___________________________________________________________________

    Структура блока произвольная.
         
Описание переменных и констант______________________________________________

    Блок сам является описанием переменных и констант.
         
Описание применения_________________________________________________________

    Переменные и константы используются в любой программе и их применение
естественно.
         
Рекомендации по использованию_______________________________________________

    Рекомендуется, чтобы блок описания переменных был в отображенном
адресном пространстве ОЗУ процесса.
         
Примеры использования_______________________________________________________

    Примеров нет, так как этот модуль произволен по написанию.
         
Примеры описания____________________________________________________________

AdVarDes:
	Integer:		0
	Flg:		0
	...


