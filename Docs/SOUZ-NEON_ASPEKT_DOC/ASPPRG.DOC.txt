╔══════════════════════════════════════════════════════════════════════════╗
║			Структура Программ и Процессов			   ║
║(C) A.S.P. Jes							      1993 ║
╚══════════════════════════════════════════════════════════════════════════╝

    После ознакомления с общей структурой системы "АСПЕКТ", и получив
некоторое представление о ее функциях, выясним, чем мы располагаем и как
этим пользоваться. Для того, чтобы понять как работает система, мы не будем
сначала описывать функции, а потом данные, которые необходимы для этих
функций, мы сделаем наоборот. В системе "АСПЕКТ" присутствуют два понятия о
программах, которые может создать программист - это программа и процесс. Чем
они отличаются друг от друга? Программа - это программа, которая имеет
интерфейс с пользователем, и соответственно, как уже отмечалось выше,
разделена на две части - "ресурсы" и "код". Процесс - это тоже программа, но
у неё отсутствует интерфейс с пользователем. В процессе тоже есть разделение
на "ресурсы" и "код", но раздел описания "ресурсов" отличается от раздела
описания в программе и не имеет блока описания интерфейса с пользователем.
Как работают программа и процесс рассмотрим немного позже, а сейчас выясним,
как устроены программа и процесс.
 
┌──────────────────────────────────────────────────────────────────────────┐
│			     Структура Программы			   │
└──────────────────────────────────────────────────────────────────────────┘

    Программа разбита на две части "ресурсы" и "код". Код - это алгоритм,
написанный на каком-либо языке программирования, который имеет функции,
процедуры , то есть то, что присуще любому языку программирования и
программе. Код не поддается структуризации, а поэтому он может быть написан
программистом как угодно, используя, конечно, стандартные запросы к функциям
системы. В конце книги мы предложим свой тип написания программного кода.
    Теперь самое основное, на чем базируется вся система "АСПЕКТ" - это
"ресурсы". Логически "ресурсы" разбиты на пять частей: блок файловых
атрибутов, блок программных атрибутов, блок интерфейса с пользователем, блок
установок и блок описания переменных. Каждый блок имеет строго определенную
структуру и сам находится в строго определенной структуре:

┌──────────────────────────────────────────────────────────────────────────┐
│			Описание "ресурсов" программы			   │
└──────────────────────────────────────────────────────────────────────────┘
┌──────────────────────────────────────────────────────────────────────────┐
│    			Блок параметров программы			   │
└──────────────────────────────────────────────────────────────────────────┘

Назначение__________________________________________________________________

    Блок параметров программы служит для описания адресов основных блоков,
по которым система производит действия с программой. 
     
Структура___________________________________________________________________

┌────────┬──────┬────────────┬───┬─────────────────────────────────────────┐
│  Адрес │ Тип	│  Параметр  │См.│	        Комментарий		   │
├────────┴──────┴────────────┴───┴─────────────────────────────────────────┤
│StrtPrg								   │
├──────────────────────────────────────────────────────────────────────────┤
│	   word	  AdFilAtr     0   Адрес блока файловых атрибутов	   │
│	   word	  AdPrgAtr     2   Адрес блока программных атрибутов       │
│	   word	  AdTblSld     4   Адрес блока  описания ссылок на слайды  │
│	   word	  AdSetup      6   Адрес блока описания установок	   │
│	   word	  AdVarDes    10   Адрес блока описания переменных	   │
└──────────────────────────────────────────────────────────────────────────┘

Описание переменных и констант______________________________________________

 Адреса
┌───────────────┬──────────────────────────────────────────────────────────┐
│ Имя параметра │		    Примечание				   │
├───────────────┴──────────────────────────────────────────────────────────┤
│ AdFilAtr	  Адреса блоков описаний должны находиться в		   │
│ AdPrgAtr	  непереотображаемых 64К ОЗУ			  	   │
│ AdTblSld								   │
│ AdSetup								   │
│ AdVarDes								   │
└──────────────────────────────────────────────────────────────────────────┘

Описание применения_________________________________________________________

    Этот блок является неотъемлемой частью программы, и он обязателен.
         
Рекомендации по использованию_______________________________________________

    Блок параметров программы может находиться в любом месте программы, но
обязательно должен находиться в непереотображаемом адресном пространстве ОЗУ
программы. Это связано с тем, что система по этому блоку "восстанавливает"
всю структуру программы при ее запуске, выгрузке и переключении с программы
на программу. И если этот блок будет переотображен, то могут возникнуть
проблемы и неприятности. 
     
Примеры использования_______________________________________________________

    Примеров нет, так как этот модуль присутствует в каждой программе, он
стандартен и имеет фиксированный набор обязательных элементов. 
         
Примеры описания____________________________________________________________

StrtPrg:
	.word	AdFilAtr
	.word	AdPrgAtr
	.word	AdTblSld
	.word	AdSetup
	.word	AdVarDes

┌──────────────────────────────────────────────────────────────────────────┐
│			Блок описания ссылок на слайды			   │
└──────────────────────────────────────────────────────────────────────────┘ 

Назначение__________________________________________________________________

    Блок предназначен для контроля целостности программы. По этому блоку
система может в любой момент времени проверить правильность и наличие всех
блоков интерфейса с пользователем, определить правильность оформления блоков
и описания примитивов. 
     
Структура___________________________________________________________________

┌────────┬──────┬────────────┬───┬─────────────────────────────────────────┐
│  Адрес │ Тип	│  Параметр  │См.│	        Комментарий		   │
├────────┴──────┴────────────┴───┴─────────────────────────────────────────┤
│AdTblSld								   │
├──────────────────────────────────────────────────────────────────────────┤
│	  word	  Slide1       0   Адрес описания слайда 1		   │
│	  ...	   .....      ...					   │
│	  word	  SlideN       n   Адрес описания слайда N		   │
│	  word	  -Nul	      n+2  Конец описания			   │
└──────────────────────────────────────────────────────────────────────────┘
         
Описание переменных и констант______________________________________________

 Адреса
┌───────────────┬──────────────────────────────────────────────────────────┐
│ Имя параметра │		    Примечание				   │
├───────────────┴──────────────────────────────────────────────────────────┤
│ Slide1	 Адреса описания действующих слайдов должны 		   │
│  ...		 находиться в отображенных 64К ОЗУ			   │
│ SlideN								   │
└──────────────────────────────────────────────────────────────────────────┘
         
Описание применения_________________________________________________________

    Этот блок несет в себе информацию о наличии или отсутствии каких-либо
примитивов и их целостности. В блоке должны быть описаны все адреса,
указывающие на описания слайдов. Блок специально сформирован для контроля. 
В дальнейшем будет разработана программа проверки синтаксиса "ресурсов"
программы.
         
Рекомендации по использованию_______________________________________________

    Блок параметров программы может находиться в любом месте программы, но
обязательно должен находиться в непереотображаемом адресном пространстве ОЗУ
программы. 
         
Примеры использования_______________________________________________________

    Примеров нет, так как этот модуль присутствует в каждой программе и он 
стандартен. 
         
Примеры описания____________________________________________________________

AdTblSld:
	.word	Slide1
	.word	Slide2
	.word	Slide3
	.word	Slide4
	.word	-1

