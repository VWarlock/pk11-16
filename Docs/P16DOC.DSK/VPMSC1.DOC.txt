
              13. Эмулятор манипулятора "мышь"
							  13.09.90

     Эмулятор манипулятора "мышь" (МЫШЪ) обеспечивает обслуживание 
манипулятора (т.е.  физического  устройства  в	стандарте  MSX	со
стандартным разъемом и двумя кнопками  управления).  Информация  о 
действиях, выполняемых пользователем с МЫШЪ заносится эмулятором в 
комплект регистров. В случае  отсутствия  физического  устройства, 
программы, использующие МЫШЪ, без  модификации  могут  управляться 
посредством клавиатуры. Выделенные  комбинации  клавиш  клавиатуры 
позволяют  управлять   работой   программ   вне   зависимости   от 
фактического наличия манипулятора.
     Управление  эмулятором  МЫШЪ   и   информация   о   действиях 
пользователя с манипулятором содержится в четырех регистрах:

MXX	  (176200)  ─ регистр координаты X;
MYY	  (176202)  ─ регистр координаты Y;
MCSR	  (176204)  ─ регистр состояния;
MCALL	  (176206)  ─ регистр управления;
  MVEC	  ═ 130     ─ вектор прерывания при изменениях.

     При   альтернативном   управлении   программой    посредством 
клавиатуры используются следующие комбинации клавиш:
─ одновременное нажатие SHIFT +  "стрелок"  приводит  к  "грубому"
изменению  координат  (шаг  изменения  при   однократном   нажатии 
определяется дискретом); дискрет по обоим осям (по умолчанию) ─ 8;
─ одновременное нажатие SHIFT + ФИКС +"стрелок" приводит к измене─
нию координат на 1 (это режим точной работы);
─ SHIFT + "0" на дополнительной части клавиатуры выполняет функцию
левой кнопки МЫШЪ;
─ SHIFT + "ВВОД"  на  дополнительной  части  клавиатуры  выполняет
функцию правой кнопки МЫШЪ;
─  однократное	нажатие  на  "кнопку"	(т.е.	SHIFT+"ввод"   или
SHIFT+"0") соответствует двум действиям  ─  нажатию  и	отпусканию
кнопки МЫШЪ;
─ SHIFT + ФИКС + (0 или ВВОД) приводит к  "защелкиванию"  соответ─
ствующей кнопки МЫШЪ;
─ SHIFT + "." дополнительной клавиатуры или
─ SHIFT + ФИКС + "." дополнительной клавиатуры приводит  к  отпус─
канию "защелкнутых" кнопок МЫШЪ; дополнительно к этому проверяется 
наличие подключенного манипулятора  с  соответствующей  установкой 
разряда в MSCR; последнее действие связано с тем,  что	физическое
подключение (или отключение) МЫШЪ может производиться  в  процессе 
работы  ПЭВМ  и  дает  возможность  программе,  использующей  МЫШЪ 
динамически определять посредством чего она управляется.
     Регистры MXX и MYY содержат  16─разрядные	целые  со  знаком,
определяющие координаты по оси X и Y соответственно. По  включению
питания  или  по  программному  сбросу  данные  регистры  содержат 
нулевые значения.

════╦══╦══╦══╦══╦══╦══╦══╦══╗ MCSR ─ регистр состояния
   8║ 7║ 6║ 5║ 4║ 3║ 2║ 1║ 0║
════╩══╩══╩══╩══╩══╩══╩══╩══╝
     │	 │  │  │  │	│  └── (R/O) 0 ─ левая кнопка отжата
     │	 │  │  │  │	│	     1 ─ левая кнопка нажата
     │	 │  │  │  │	└───── (R/O) 0 ─ правая кнопка отжата
     │	 │  │  │  │		     1 ─ правая кнопка нажата
     │	 │  │  │  └───────── (R/O) 0 ─ манипулятор подключен
     │	 │  │  │		   1 ─ манипулятор отключен
     │	 │  │  └────────── (R/O) 0 ─ нет изменений с кнопками
     │	 │  │			 1 ─ изменилось состояние кнопок
     │	 │  └────────── (W/O) 1 ─ программный сброс МЫШЪ
     │	 │			  (X:═Y:═0, дискрет:═8)
     │	 └───── (R/W) 0 ─ прерывания запрещены
     │		      1 ─ прерывания разрешены
     └───── (R/O) 1 ─ изменение состояния МЫШЪ
		      (кнопки и/или X и/или Y)
m.ready  (разряд 7) ─  устрановка  в  1  означает,  что  произошло
         изменение в состоянии МЫШЪ;
m.inten  (разряд 6) ─ установка в  1  разрешает  прерывания;  0  ─
         запрещает прерывания;
m.reset  (разряд 5) ─ запись 1 производит программный сброс  МЫШЪ,
         т.е.  координаты  устанавливаются  в  нулевое   значение, 
         дискрет устанавливается равным 8;
m.state  (разряд 4) ─  установка  в  1	означает,  что	 произошло
         изменение состояния кнопок МЫШЪ;
m.mouse  (разряд 3) ─ разряд  установлен  в  1,  если  манипулятор
         физически подключен к ПЭВМ;
m.bright (разряд 1) ─ установлен в 1, если правая кнопка нажата; 0
         ─ кнопка отпущена;
m.bleft  (разряд 0) ─ установлен в 1, если левая кнопка нажата;  0
         ─ кнопка отпущена;
     Чтение регистра MYY  приводит  к  сбросу  разряда	m.ready  в
регистре MCSR.
     Запись в регистр MXX изменяет дискрет, т.е. число на  которое
будет изменяться координата при нажатии на "стрелки". Младший байт 
определяет величину дискрета по оси X, старший байт ─ по оси Y.
     Дискрет по умолчанию устанавливается  по  включению  питания, 
программному сбросу, захвате процессом МЫШЪ.
     Регистр MCALL используется для нескольких целей. Сам эмулятор
МЫШЪ  через   этот   регистр   получает   информацию   о   нажатии 
соответствующих клавиш для симуляции физического манипулятора.
     Процесс, который предполагает использовать  МЫШЪ  в  качестве 
устройства управления, должен выполнить "захват" МЫШЪ.  Для  этого 
процесс должен захватить регистр (из области  свободных  регистров 
для  эмуляции).   Повторный   захват   МЫШЪ   тем   же   регистром 
игнорируется. Далее процесс должен переслать адрес этого  регистра 
в регистр MCALL. После этого все изменения с МЫШЪ (т.е.  установка
в 1 разряда ьюкуфвн регистра MCSR) будет  приводить  к	тому,  что
содержимое  регистра  MCSR  будет  копироваться  (пересылаться)  в
указанный процессом регистр.
     Отказ процессом от изпользования МЫШЪ выполняется засылкой  в 
регистр MCALL константы ─1  (восьмеричное  значение  177777).  При
этом восстанавливаются параметры и принадлежность  МЫШЪ  процессу, 
владевшему МЫШЪ перед этим (используется стековый механизм захвата 
МЫШЪ). Программный сброс очищает стек "захватов" МЫШЪ.
