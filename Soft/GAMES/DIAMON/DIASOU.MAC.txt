.TITLE	SOUND_PROCESS	; ┌─────────────────────────────────────────────────┐
.ENABL	MCL		; │	       Звук программы DIAMONDS .	    │
.INCLU	/SY:P16MAC/	; └─────────────────────────────────────────────────┘
;────────────────────────────────────────────────────────────────────────────
MYREGISTER	=	176606		; Регистр .
MYPRIORITET	=	20		; Приоритет .
MYSTACK		=	200		; Стек .
REGIDENT	=	2		; Идентификатор .
MUSREGISTER	=	MYREGISTER	; Регистр .
;────────────────────────────────────────────────────────────────────────────
;			ИНИЦИАЛИЗАЦИЯ МУЗЫКАЛЬНОГО ПРОЦЕССА .
;────────────────────────────────────────────────────────────────────────────
INIMUS::
	NEWROMP	#MUSPROCESS	; Запустить процесс .
	MOV	R0,(PC)+	; ┐
MUSDESCRIPTOR::			; Запомнить его дескриптор .
	.WORD	0		; ┘
	MOV	#1$,@#MUSREGISTER
	RETURN

1$:	.WORD	0,0,0,5$
	.WORD	0,0,0,9$

5$:	.WORD	U.DIAMON,12.,S.DIAMON,6.,S.DIAMON,12.,0,^C0

9$:	.WORD	1,^C0,0,0
;────────────────────────────────────────────────────────────────────────────
;			МУЗЫКАЛЬНЫЙ ПРОЦЕСС .
;────────────────────────────────────────────────────────────────────────────
MUSPROCESS:
	MOV	#MYSTACK,SP	; Расписать стек .
	UNPREG	#MYREGISTER	; Освободить регистр .
	PROREG	#BLKREGISTER	; Захватить регистр .
	SETPRI	#MYPRIORITET	; Понизить приоритет .
2$:	CLR	R0		; Очистить регистры .
	CLR	R1		; ┘
	MOV	#1,R3		; Время задержки , если по таймеру .
	WAITINT	W.MASKA		; Встать на ожидание .
	CALL	@1$(R0)		; Исполнить подпрограмму .
	BR	2$		; Снова на ожидание .

1$:	.WORD	TIMCAL,REGCAL	; Возможные подпрограммы .
;────────────────────────────────────────────────────────────────────────────
;			ВЫЗОВ ПО ОБРАЩЕНИЮ К РЕГИСТРУ .
;────────────────────────────────────────────────────────────────────────────
REGCAL:
	MOV	@#MYREGISTER,R0	; Взять содержимое регистра .
	BNE	LOAD		; Если загрузка новой мелодии .
			; Останов процесса .
	CLR	W.MASKA		; Не вызывать по времени .
	MOV	#6,R4		; ┐
	MOV	#4,R1		; │
3$:	CALL	STOPVOIS	; Заткнуть все голоса .
	TST	-(R4)		; │
	SOB	R4,3$		; ┘
	TIMEON			; Включить учет времени .
	RETURN
;────────────────────────────────────────────────────────────────────────────
;			ЗАГРУЗКА НОВОЙ МЕЛОДИИ .
;────────────────────────────────────────────────────────────────────────────
LOAD:
	MOV	#VOISES,R1	; Буфер голосов .
	MOV	#BEGVOI,R2	; ┘
	MOV	#10,R3		; ┐
1$:	MOV	(R0),(R1)+	; Заполнить все голоса .
	MOV	(R0)+,(R2)+	; │
	SOB	R3,1$		; ┘
	MOV	#10,R2		; ┐
2$:	CLR	(R1)+		; Очистить все времена .
	SOB	R2,2$		; ┘
	MOV	#M.TIO,W.MASKA	; Далее вызывать по времени .
	TIMEOFF			; Отключить учёт времени .
	RETURN
;────────────────────────────────────────────────────────────────────────────
;				ВЫЗОВ ПО ВРЕМЕНИ .
;────────────────────────────────────────────────────────────────────────────
TIMCAL:
	MOV	#SNDCSR,R2	; Регистры состояний таймеров .
	MOV	#SNLCSR,R3	; ┘
	MOV	#16,R5		; Смещение до последнего элемента .
1$:	TST	VOISES(R5)	; Голос работает ?
	BEQ	5$		; Нет .
	DEC	TIMVOI(R5)	; Время пришло ?
	BPL	5$		; Нет .
2$:	MOV	@VOISES(R5),R0	; Взять актуальное значение .
	ADD	#2,VOISES(R5)	; Сместиться .
				; Взять длительность .
	MOV	@VOISES(R5),TIMVOI(R5)
	BNE	3$		; Если не конец голоса .
HALT
	CLR	VOISES(R5)	; Голос закончен .
	CALL	STOPVOIS	; Заткнуть канал .
	BR	5$		; Завершить итерацию .
3$:	BPL	4$		; Если это не команда .
	MOV	TIMVOI(R5),R1	; ┐
	COM	R1		; Исполнить команду .
	CALL	@8$(R1)		; ┘
	BR	2$		; На начало итерации .
4$:	ADD	#2,VOISES(R5)	; Сместиться .
	MOV	R5,R4		; ┐
	BIC	#10,R4		; Голосовое смещение .
	CLC			; Сбросить перенос .
	CALL	@SUBROT(R5)	; Исполнить подпрограмму .
	BCS	2$		; Если перезагрузить .
5$:	DEC	R5		; Уменьшить смещение .
	DEC	R5		; ┘
	BPL	1$		; Если ещё не все голоса .
	MOV	#VOISES,R0	; Буфер голосов .
	MOV	#4,R1		; Кол-во голосов .
6$:	TST	(R0)+		; Голос есть ?
	BNE	7$		; Да .
	SOB	R1,6$		; Повторить для всех .
	TIMEON			; Включить учёт времени .
	CLR	W.MASKA		; Больше не вызывать по таймеру .
7$:	RETURN

8$:	.WORD	PL.BEG,PL.HERE,NEWROU
;────────────────────────────────────────────────────────────────────────────
;			ЗАПУСК МЕЛОДИИ (ОГИБАЮЩЕЙ) С НАЧАЛА .
;────────────────────────────────────────────────────────────────────────────
PL.BEG:				; Загрузить начальное значение .
	MOV	BEGVOI(R5),VOISES(R5)
	RETURN
;────────────────────────────────────────────────────────────────────────────
;			ПЕРЕХОД НА УКАЗАННОЕ МЕСТО .
;────────────────────────────────────────────────────────────────────────────
PL.HERE:
	MOV	R0,VOISES(R5)	; Загрузить адрес .
	RETURN
;────────────────────────────────────────────────────────────────────────────
;			ЗAГРУЗКА НОВОЙ ОГИБАЮЩЕЙ .
;────────────────────────────────────────────────────────────────────────────
NEWROU:
	MOV	R0,ROUNDS(R4)	; Загрузить адрес .
	MOV	R0,BEGROU(R4)	; ┘
	RETURN
;────────────────────────────────────────────────────────────────────────────
;				КОРОТКИЕ ЗВУКИ .
;────────────────────────────────────────────────────────────────────────────
STUK:
	CALL	BEEPER		; Издать звук .
	RETURN
;────────────────────────────────────────────────────────────────────────────
;			ЗАГРУЗКА ОГИБАЮЩЕЙ .
;────────────────────────────────────────────────────────────────────────────
LOAROU:
	TST	VOISES(R4)	; Голос есть ?
	BEQ	1$		; Нет .
	TST	TIMVOI(R4)	; Голос закончился ?
	BNE	VOIS		; Нет .
				; Загрузить начало огибающей .
	MOV	BEGROU(R4),ROUNDS(R4)
	SEC			; Выйти с переносом .
1$:	RETURN
;────────────────────────────────────────────────────────────────────────────
;			ЗАГРУЗКА ГОЛОСА .
;────────────────────────────────────────────────────────────────────────────
VOIS:
	MOV	SREGIM(R5),(R2)	; Загрузить режим .
	MOV	SNDREG(R5),R4	; Адрес регистра .
	MOVB	R0,(R4)		; ┐
	SWAB	R0		; Записать длительность .
	MOVB	R0,(R4)		; ┘
	RETURN
;────────────────────────────────────────────────────────────────────────────
;			ЗАТЫКАНИЕ ГОЛОСА .
;────────────────────────────────────────────────────────────────────────────
STOPVOIS:
	MOV	LREGIM(R4),SNLREG(R4)
	RETURN
;────────────────────────────────────────────────────────────────────────────
;			КОНСТАНТЫ И ПЕРЕМЕННЫЕ .
;────────────────────────────────────────────────────────────────────────────
W.MASKA:	.WORD	0			; Маска для ожидания .
BLKREGISTER:					; Описание регистра .
		.WORD	MYREGISTER,0,0,2000,REGIDENT,-1

		; ТАБЛИЦА МУЗЫКАЛЬНЫХ ЗНАЧЕНИЙ .
VOISES:		.WORD	0,0,0,0			; Текущие адреса голосов .
ROUNDS:		.WORD	0,0,0,0			; Текущие адреса огибающих .
BEGVOI:		.WORD	0,0,0,0			; Начальные адреса голосов .
BEGROU:		.WORD	0,0,0,0			; Начальные адреса огибающих.
TIMVOI:		.WORD	0,0,0,0			; Время голосов .
TIMROU:		.WORD	0,0,0,0			; Время огибающих .
SNDREG:		.WORD	SNDC0R,SNDC1R,SNDC2R,0	; Регистры тона .
SNLREG:		.WORD	SNLC0R,SNLC1R,SNLC2R,0	; Регистры громкости .
SREGIM:		.WORD	66,166,266,21		; Режимы опорных частот .
LREGIM:		.WORD	21,121,221,21		; Режимы громкостей .
SUBROT:		.WORD	VOIS,VOIS,VOIS,STUK	; Подпрограммы по голосам .
RSUBRO:		.WORD	LOAROU,LOAROU,LOAROU,RET; Подпрограммы по огибающим .
;────────────────────────────────────────────────────────────────────────────
;			ПОДПРОГРАММА КОРОТКИХ ЗВУКОВ .
;────────────────────────────────────────────────────────────────────────────
BEEPER::
	TST	(PC)+		; ┐
FLBEEP::			; Флаг запрета звуков установлен ?
	.WORD	0		; ┘
	BNE	3$		; Да .
	CALL	SAVREG		; Сохранить регистры .
	MOV	R0,R5		; Сохранить регистр .
;	TIMEOFF			; Выключить учёт времени .
	MOV	#22,@#SNDCSR	; + на выходе .
	MOV	(R5)+,R1	; Взять первую длительность .
1$:	MOV	#20,@#SNLCSR	; Изменить состояние динамика .
	SOB	R1,.		; Задержка на длительность .
	MOV	(R5)+,R1	; Взять очередную длительность .
	BEQ	2$		; Если уже не конец .
	MOV	#22,@#SNLCSR	; Изменить состояние динамика .
	SOB	R1,.		; Задержка на длительность .
	MOV	(R5)+,R1	; Взять очередную длительность .
	BNE	1$		; Если ещё не конец .
2$:;	TIMEON			; Включить учёт времени .
3$:	RETURN
;────────────────────────────────────────────────────────────────────────────
;				УДАР ОБ СТЕНКУ.
;────────────────────────────────────────────────────────────────────────────
S.WALL::
	.WORD	10,70,20,60,30,50	; Атака .
	.WORD	40,40,40,40		; Основной тон .
	.WORD	30,50,20,60,10,70	; Затухание .
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			УДАР ОБ СЕРЫЙ КВАДРАТ .
;────────────────────────────────────────────────────────────────────────────
S.KWAIT::	; Неудачный .
	A	=	160
	.WORD	A-10,10,A-10,10
	.WORD	A-30,30,A-30,30
	.WORD	A-10,10,A-10,10,0
U.KWAIT::	; Удачный .
	A	=	260
	B	=	14
	.REPT	14.
	.WORD	A/10-20,A/10+20
	.WORD	A/10,A/10
	.WORD	A/10,A/10
	.WORD	A/10-20,A/10+20
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			УДАР ОБ СИНИЙ КВАДРАТ .
;────────────────────────────────────────────────────────────────────────────
S.KBLUE::	; Неудачный .
	A	=	200
	.WORD	A-10,10,A-10,10
	.WORD	A-30,30,A-30,30
	.WORD	A-10,10,A-10,10,0
U.KBLUE::	; Удачный .
	A	=	300
	B	=	14
	.REPT	14.
	.WORD	A/10-20,A/10+20
	.WORD	A/10,A/10
	.WORD	A/10,A/10
	.WORD	A/10-20,A/10+20
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			УДАР ОБ ЖЁЛТЫЙ КВАДРАТ .
;────────────────────────────────────────────────────────────────────────────
S.KYELLOW::	; Неудачный .
	A	=	220
	.WORD	A-10,10,A-10,10
	.WORD	A-30,30,A-30,30
	.WORD	A-10,10,A-10,10,0
U.KYELLOW::	; Удачный .
	A	=	320
	B	=	14
	.REPT	14.
	.WORD	A/10-20,A/10+20
	.WORD	A/10,A/10
	.WORD	A/10,A/10
	.WORD	A/10-20,A/10+20
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			УДАР ОБ ЗЕЛЁНЫЙ КВАДРАТ .
;────────────────────────────────────────────────────────────────────────────
S.KGREEN::	; Неудачный .
	A	=	240
	.WORD	A-10,10,A-10,10
	.WORD	A-30,30,A-30,30
	.WORD	A-10,10,A-10,10,0
U.KGREEN::		; Удачный .
	A	=	340
	B	=	14
	.REPT	14.
	.WORD	A/10-20,A/10+20
	.WORD	A/10,A/10
	.WORD	A/10,A/10
	.WORD	A/10-20,A/10+20
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			УДАР ОБ КРАСНЫЙ КВАДРАТ .
;────────────────────────────────────────────────────────────────────────────
S.KRED::	; Неудачный .
	A	=	260
	.WORD	A-10,10,A-10,10
	.WORD	A-30,30,A-30,30
	.WORD	A-10,10,A-10,10,0
U.KRED::	; Удачный .
	A	=	360
	B	=	14
	.REPT	14.
	.WORD	A/10-20,A/10+20
	.WORD	A/10,A/10
	.WORD	A/10,A/10
	.WORD	A/10-20,A/10+20
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			ВТЫКАНИЕ В СЕРУЮ КИСТЬ .
;────────────────────────────────────────────────────────────────────────────
S.BWAIT::
	A	=	14
	B	=	10
	.REPT	15.
	.WORD	B,20
	B	=	B+A
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			ВТЫКАНИЕ В СИНЮЮ КИСТЬ .
;────────────────────────────────────────────────────────────────────────────
S.BBLUE::
	A	=	20
	B	=	10
	.REPT	15.
	.WORD	B,20
	B	=	B+A
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			ВТЫКАНИЕ В ЖЁЛТУЮ КИСТЬ .
;────────────────────────────────────────────────────────────────────────────
S.BYELLOW::
	A	=	24
	B	=	10
	.REPT	15.
	.WORD	B,20
	B	=	B+A
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			ВТЫКАНИЕ В ЗЕЛЁНУЮ КИСТЬ .
;────────────────────────────────────────────────────────────────────────────
S.BGREEN::
	A	=	30
	B	=	10
	.REPT	15.
	.WORD	B,20
	B	=	B+A
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;			ВТЫКАНИЕ В КРАСНУЮ КИСТЬ .
;────────────────────────────────────────────────────────────────────────────
S.BRED::
	A	=	34
	B	=	10
	.REPT	15.
	.WORD	B,20
	B	=	B+A
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В БРИЛЬЯНТ .
;────────────────────────────────────────────────────────────────────────────
U.DIAMON::	; Удачный .
	A	=	300
	.REPT	14
	.WORD	A,20
	A	=	A-20
	.ENDR
	.WORD	0
S.DIAMON::	; Неудачный .
	A	=	100
	.REPT	7
	.WORD	A,A
	A	=	A-10
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В КЛЮЧ .
;────────────────────────────────────────────────────────────────────────────
U.KEY::		; Удачный .
	.WORD	100,100,100,100,100,100,100,100,100,100
	.WORD	400,400,400,400,1000,1000,1000,1000,0
S.KEY::		; Неудачный .
	.WORD	100,100,100,100,100,100,100,100,0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В ЗАМОК .
;────────────────────────────────────────────────────────────────────────────
U.LOCK::	; Удачный .
	A	=	400
	.REPT	37
	.WORD	A
	A	=	A-10
	.ENDR
	.REPT	37
	A	=	A+10
	.WORD	A
	.ENDR
	.WORD	0
S.LOCK::	; Неудачный .
	.WORD	100,200,100,200,100,200,100,200,0
;────────────────────────────────────────────────────────────────────────────
;			УДАР В ЗАМЕНУ НАПРАВЛЕНИЙ .
;────────────────────────────────────────────────────────────────────────────
S.ROT::
	.WORD	1000,1000,400,400
	.WORD	1000,1000,400,400
	.WORD	1000,1000,400,400
	.WORD	1000,1000,400,400
	.WORD	1000,1000,400,400
	.WORD	1000,1000,400,400,0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В ПОПЫТКУ .
;────────────────────────────────────────────────────────────────────────────
S.ATT::
	A	=	400
	.REPT	37
	.WORD	A
	A	=	A-10
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В СУПЕРКИСТЬ .
;────────────────────────────────────────────────────────────────────────────
S.SUPER::
	.REPT	3
	A	=	400
	.REPT	20
	.WORD	A
	A	=	A-14
	.ENDR
	.REPT	20
	A	=	A+14
	.WORD	A
	.ENDR
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В МАГНИТ.
;────────────────────────────────────────────────────────────────────────────
S.SN::
	.WORD	3000,3000,3000,3000,3000,3000
	.WORD	3000,3000,3000,3000,3000,3000,0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В ЗАМЕДЛИТЕЛЬ .
;────────────────────────────────────────────────────────────────────────────
S.MINUS::
	A	=	20
	.REPT	20
	.WORD	A-10,10
	A	=	A+10
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;				УДАР В УСКОРИТЕЛЬ .
;────────────────────────────────────────────────────────────────────────────
S.PLUS::
	A	=	230
	.REPT	20
	A	=	A-10
	.WORD	A-10,10
	.ENDR
	.WORD	0
;────────────────────────────────────────────────────────────────────────────
;				ТРЕСК.
;────────────────────────────────────────────────────────────────────────────
S.TRESK::
	.WORD	20,20,0
;────────────────────────────────────────────────────────────────────────────
;			ЗВУК ПРИБАВЛЕНИЯ БОНУСОВ .
;────────────────────────────────────────────────────────────────────────────
S.BONUS::
	.WORD	7,1,4,4,7,1,0
.END
