.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49
Table of contents

    2- 462	common definitions for bios monitor
    4-   1	P12FIS
.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49  Page 1


      1					.enabl  lc
      2					.enabl	ama
      3					.enabl  gbl
      4					.mcall	.push,.pop
.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49  Page 3
Common definitions for bios monitor

      2
.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49  Page 4
P12FIS

      1					.sbttl P12FIS
      2					;Come to this routine after a FIS instruction trap with the
      3					;PC and PS still on the RCPC & RCPS.
      4					;------------------------------------------------
      5	000000	010637 	137776 		FIS::	mov	sp,	hstack-2;
      6	000004	012706 	137776 			mov	#hstack-2,sp	;
      7	000010					.push	<r5,r4,r3,r2,r1,r0>
      8	000024					rcpc			;
      9	000026	010005 				mov	r0,	r5	;
     10	000030	162705 	000002 			sub	#2,	r5	;
     11	000034					mfus			; FIS instruction
     12	000036	110001 				movb	r0,	r1	;
     13	000040	042700 	177770 			bic	#^C7,	r0	; register
     14	000044	040001 				bic	r0,	r1	;
     15	000046	006300 			      	asl	r0		;
     16	000050	060600 				add	sp,	r0	;
     17	000052	010004 				mov	r0,	r4	;
     18	000054	011005 				mov	(r0),	r5	;
     19					;................................
     20	000056					mfus			;
     21	000060	010002 				mov	r0,	r2	;x.h
     22	000062					mfus			;
     23	000064	010003 				mov	r0,	r3	;x.l
     24	000066	010514 				mov	r5,	(r4)	; reg :=^result
     25	000070					mfus			;
     26	000072	010004 				mov	r0,	r4	;y.h
     27	000074					mfus			;
     28	000076					.push	r5		;
     29	000100	010005 				mov	r0,	r5	;y.l
     30					;------------------------------------------------
     31	000102	060107 				add	r1,	pc	;***** jmp simulator routine
     32					;------------------------------------------------
     33	000104				$$FADD:				; floating addition
     34	000104	000137 	000522'			jmp	xfadd		;
     35	000110	000000 	000000 			.word 	0, 0
     36					;------------------------------------------------
     37	000114				$$FSUB:				; floating subtraction
     38	000114	062702 	100000 			add	#100000,r2	;
     39	000120	000137 	000522'			jmp	xfadd		;
     40					;------------------------------------------------
     41	000124				$$FMUL:				;
     42	000124	006302 				asl	r2		; x
     43	000126	010200 				mov	r2,	r0	;
     44	000130	006104 				rol	r4		;
     45	000132	000450 				br	xfmul		;
     46					;------------------------------------------------
     47	000134				$$FDIV:				; floating divide
     48					;set up sign of result and get exponents
     49	000134	006302 				asl	r2		;
     50	000136	010200 				mov	r2,	r0	;
     51	000140	006104 				rol	r4		;
     52	000142	010401 				mov	r4,	r1	;
     53	000144	105501 				adcb	r1		;
     54	000146	010146 				mov	r1,	-(sp)	;
     55	000150	105000 				clrb	r0		;
     56	000152	040002 				bic	r0,	r2	;
     57	000154	000261 				sec			;
.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49  Page 4-1
P12FIS

     58	000156	106002 				rorb	r2		;
     59	000160	105001 				clrb	r1		;
     60	000162	040104 				bic	r1,	r4	;
     61	000164	000261 				sec			;
     62	000166	106004 				rorb	r4		;
     63	000170	000300 				swab	r0		; exp(x)
     64	000172	001547 				beq 	ex02		; result = 0.0
     65	000174	000301 				swab	r1		; exp(y)
     66	000176	001545 				beq 	ex02		; y=0:  attempted divide by zero
     67
     68	000200	160001 				sub 	r0,	r1	;get resultant exponent
     69	000202	062701 	000200 			add	#200,	r1 	; convert exponent to excess 200 notat
     70	000206					.push 	r1 		;save result exp
     71					;................................................
     72	000210	073227 	000007 			ashc	#7,	r2	; c
     73	000214	006003 				ror	r3		; d/2
     74	000216	071402 				div	r2,	r4	; r4:ah/c, r5:s
     75	000220	010400 				mov	r4,	r0	;
     76	000222	006300 				asl	r0		; 2*ah/c
     77	000224	070003 				mul	r3,	r0	; r0,r1:d*ah/c
     78
     79	000226	160500 				sub	r5,	r0	;
     80	000230	006200 				asr	r0
     81	000232	006001 				ror	r1
     82	000234	005402 				neg	r2
     83	000236	071002 				div	r2,	r0	;
     84	000240	006702 				sxt	r2		; r2,r0,r1
     85
     86	000242	010003 				mov	r0,	r3	; r2,r3,r1
     87	000244	006301 				asl	r1
     88	000246	006103 				rol	r3
     89					;	rol	r2
     90	000250	060402 				add	r4,	r2
     91	000252	000451 				br	exn1p		;
     92					;------------------------------------------------------------------------
     93	000254				xfmul:				; multiply <r4,r5> by <r2,r3>
     94					;set up sign of result and get exponents
     95					;	asl	r2		; x
     96					;	mov	r2,	r0	;
     97					;	rol	r4		;
     98	000254	010401 				mov	r4,	r1	;
     99	000256	105501 				adcb	r1		;
    100	000260					.push	r1		; sign saved on stack
    101
    102	000262	105000 				clrb	r0		;
    103	000264	006003 				ror	r3		;
    104	000266	040002 				bic	r0,	r2	;
    105	000270	000261 				sec			;
    106	000272	106002 				rorb	r2		; mant
    107	000274	000300 				swab	r0		; exp
    108	000276	001505 				beq	ex02		;
    109
    110	000300	105001 				clrb	r1		;
    111	000302	006005 				ror	r5		;
    112	000304	040104 				bic	r1,	r4	;
    113	000306	000261 				sec			;
    114	000310	106004 				rorb	r4		;
.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49  Page 4-2
P12FIS

    115	000312	000301 				swab	r1		;
    116	000314	001476 				beq	ex02		;
    117
    118	000316	060100 				add 	r1,	r0	;get resultant exponent
    119	000320	162700 	000201 			sub	#201,	r0
    120	000324					.push 	r0	        ;save result exponent
    121					;------------------------------------------------
    122	000326	010500 				mov	r5,	r0	;
    123	000330	010305 				mov	r3,	r5	; r5 = xl
    124	000332	010003 				mov	r0,	r3	; r3 = yl
    125	000334	070005 				mul	r5,	r0	; yl * xl
    126					;................................
    127	000336	010401 				mov	r4,	r1	;
    128	000340	070102 				mul	r2,	r1	; xh*yh
    129	000342	006300 				asl	r0		;
    130	000344	006300 				asl	r0		;
    131	000346	006001 				ror	r1		; r1,r0: xh*yh/2 + xl*yl*2
    132	000350	006000 				ror	r0		;
    133					;................................
    134	000352	070203 				mul	r3,	r2	; yl*xh
    135	000354	070405 				mul	r5,	r4	; xl*yh
    136					;................................
    137	000356	060503 				add	r5,	r3	;
    138	000360	005502 				adc	r2		;
    139	000362	060402 				add	r4,	r2	;
    140	000364	060003 				add	r0,	r3	;
    141	000366	005502 				adc	r2		;
    142	000370	060102 				add	r1,	r2	;
    143					;-------------------------------- finish up and exit
    144	000372	073227 	177773 			ashc	#-5,	r2	;
    145	000376				exn1p:	.pop	r0		; exp
    146	000400	006202 			exn1:	asr	r2		;
    147	000402	006003 				ror	r3		;
    148	000404	032702 	000400 			bit	#400,	r2	;
    149	000410	001403 				beq	e11x		;
    150	000412	005200 			exn2:	inc	r0		;
    151	000414	006202 				asr	r2		;
    152	000416	006003 				ror	r3		;
    153	000420				e11x:				;
    154	000420	005503 				adc	r3		;
    155	000422	105502 				adcb	r2		;
    156	000424	103772 				bcs	exn2		;
    157					;------------------------------------------------
    158	000426				exn0:
    159	000426	000300 				swab	r0		; move exponent to upper byte
    160	000430	001030 				bne	ex02		; bad exp.
    161	000432	106302 				aslb	r2		; kill "hidden" bit in mantissa
    162	000434	050002 				bis	r0,	r2	;
    163	000436	006026 				ror	(sp)+		; get result sign bit
    164	000440	006002 				ror	r2		; fill in sign and adjust to create re
    165					;----------------------------------------
    166	000442				fexit:	.pop	r5		; exit
    167	000444	010300 				mov	r3,	r0	;
    168	000446					mtus			; result to stack
    169	000450	010200 				mov	r2,	r0	;
    170	000452	106701 				mfps	r1		;
    171	000454					mtus			;
.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49  Page 4-3
P12FIS

    172	000456					rcps			; ps bits --> r0
    173	000460	074001 				xor	r0,	r1	;
    174	000462	042701 	177760 			bic	#^C17,	r1	;
    175	000466	074100 				xor	r1,	r0	;
    176	000470				   	wcps                    ; mtps r0
    177	000472					.pop	<r0,r1,r2,r3,r4,r5>
    178	000506	012606 				mov	(sp)+,	sp	;
    179	000510					GO			;
    180					;------------------------------------------------------------
    181	000512	005726 			ex02:	tst	(sp)+		;
    182	000514	005002 			ex00:	clr	r2		; return zero
    183	000516	005003 				clr	r3		;
    184	000520	000750 				br	fexit		; take fast exit
    185					;------------------------------------------------
    186	000522				xfadd:				;
    187					;set up sign of result and get exponents
    188	000522	006305 				asl	r5		; x.l
    189	000524	006104 				rol	r4		; x.h
    190	000526	006101 				rol	r1		;
    191	000530					.push	r1		; sign
    192
    193	000532	006303 				asl	r3		; y.l
    194	000534	006102 				rol	r2		; y.h
    195	000536	005501 				adc	r1		; sx+sy
    196
    197	000540	000302 				swab	r2		;
    198	000542	010200 				mov	r2,	r0	;
    199	000544	105002 				clrb	r2		;
    200	000546	040200 				bic	r2,	r0	; exp(y)
    201	000550	005202 				inc	r2		;
    202	000552	000302 				swab	r2		;
    203
    204	000554	006001 				ror	r1		;
    205	000556	103003 				bcc	10$		;
    206	000560	005403 				neg	r3		;% negate y
    207	000562	005502 				adc	r2		;%
    208	000564	005402 				neg	r2		;%
    209	000566				10$:
    210	000566	000304 				swab	r4		;
    211	000570	010401 				mov	r4,	r1	;
    212	000572	105004 				clrb	r4		;
    213	000574	040401 				bic	r4,	r1	; exp(x)
    214	000576	005204 				inc	r4		;
    215	000600	000304 				swab	r4		;
    216					;----------------------------------------
    217	000602	160001 				sub 	r0,	r1	; determine relative sizes of result
    218	000604	100413 				bmi	20$		; ey > ex
    219	000606	060100 				add	r1,	r0	; exp
    220	000610	022701 	000032 			cmp	#26.,	r1	;
    221	000614	103404 				bcs	18$		;
    222	000616	005401 				neg	r1		;
    223	000620	073201 				ashc	r1,	r2	; shift y to align mantissa's
    224	000622	005505 				adc	r5		;
    225	000624	000410 				br	29$
    226	000626				18$:
    227	000626	010503 				mov	r5,	r3	;
    228	000630	010402 				mov	r4,	r2	;
.MAIN.	MACRO V05.06R Friday 30-Nov-18 09:49  Page 4-4
P12FIS

    229	000632	000416 				br	$$norm		;
    230					;----------------------------------------
    231	000634				20$:				;
    232	000634	020127 	177746 			cmp	r1,	#-26.	;
    233	000640	103405 				bcs	30$		;
    234	000642	073401 				ashc	r1,	r4	; shift x to align mantissa's
    235	000644	005502 				adc	r2		;
    236					;----------------------------------------
    237	000646				29$:				; do the addition
    238	000646	060503 				add 	r5,	r3	; add low  words
    239	000650	005502 				adc 	r2
    240	000652	060402 				add 	r4,	r2	; add high words
    241	000654				30$:
    242	000654	005702 				tst	r2		;
    243	000656	100004 				bpl 	$$norm 		; positive result
    244	000660	005403 				neg	r3		;% negate low word
    245	000662	005502 				adc	r2		;%
    246	000664	005402 				neg	r2		;%
    247	000666	005116 				com 	(sp)		;set floating sign to show negative
    248					;------------------------------------------------
    249	000670				$$norm:				;
    250	000670	032702 	001400 			bit	#1400,	r2	;
    251	000674	001241 				bne	exn1		;
    252
    253	000676	005300 				dec	r0		;
    254	000700	105702 				tstb	r2		;
    255	000702	100651 				bmi	exn0		;
    256	000704	001002 				bne	20$		;
    257	000706	005703 				tst	r3		;
    258	000710	001700 				beq	ex02		;
    259	000712				20$:				;
    260	000712	005300 				dec	r0		;
    261	000714	006303 				asl	r3		;
    262	000716	106102 				rolb	r2		;
    263	000720	100374 				bpl	20$		;
    264	000722	000641 				br	exn0		;
    265					;------------------------------------------------
    266		000001 			.end
Errors detected:  0

*** Assembler statistics


Work  file  reads: 0
Work  file writes: 0
Size of work file: 9808 Words  ( 39 Pages)
Size of core pool: 15872 Words  ( 62 Pages)
Operating  system: RT-11

Elapsed time: 00:00:00.07
DK:P16FIS,DK:P16FIS=DK:P16,DK:P16FIS
